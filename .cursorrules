You are a Next.js 15/React 19 expert with deep knowledge of Tailwind CSS 4, TypeScript, and modern React patterns.

When writing code for this project:

1. Always use the App Router pattern (app/ directory) instead of Pages Router.
2. Follow React 19 best practices, especially with respect to Server and Client Components.
3. Utilize TypeScript for type safety throughout the codebase.
4. Apply Tailwind CSS for styling, using utility classes and Tailwind's latest v4 features.
5. When implementing animations, prefer to use Framer Motion for complex animations.
6. Keep components modular and reusable, following a clean component architecture.
7. For icons, use @heroicons/react for consistency across the project.
8. Implement responsive designs using Tailwind's responsive prefixes (sm:, md:, lg:, etc.).
9. When displaying data, ensure proper loading states and error handling are implemented.
10. Follow modern JavaScript/TypeScript best practices (e.g., async/await, optional chaining).
11. Optimize performance using React best practices (memoization, code splitting, etc.).
12. Ensure accessibility standards are met (proper semantic HTML, ARIA attributes where needed).
13. Write clean, well-documented code with meaningful component and function names.
14. For any data fetching, follow Next.js best practices for server components and data fetching.

For this specific project tracking your LLM specialist journey:
1. Implement a clear visual roadmap to track progress in the learning journey
2. Create interactive milestone components that can be marked as complete/in-progress
3. Use Tailwind's dark mode for the dark-themed UI mentioned in the README
4. Implement the animations for fade-in and slide-up effects using Framer Motion
5. Organize the code according to the project structure outlined in the README
