{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/inas%20farras/OneDrive%20-%20%E5%9C%8B%E7%AB%8B%E6%9D%B1%E8%8F%AF%E5%A4%A7%E5%AD%B8/%E6%A1%8C%E9%9D%A2/Project/milestone/src/data/projects.ts"],"sourcesContent":["import { Status } from '@/components/ui/Card';\n\nexport interface Milestone {\n  id: string;\n  title: string;\n  description: string;\n  status: Status;\n  githubLink?: string;\n  tags: string[];\n  detailsLink?: string;\n  month: number;\n  icon: string;\n  roadmapId: string; // NEW: connect project to big roadmap\n  codeSnippets?: Array<{\n    title: string;\n    language: string;\n    code: string;\n  }>;\n  githubResources?: Array<{\n    title: string;\n    description: string;\n    url: string;\n  }>;\n}\n\nexport const milestones: Milestone[] = [\n  // Month 1: Python Mastery\n  {\n    id: 'calculator-app',\n    title: 'Calculator App',\n    description: 'Basic CLI calculator app (add, subtract, multiply, divide).',\n    status: 'Completed',\n    tags: ['Python', 'CLI'],\n    githubLink: '',\n    detailsLink: '/milestones/calculator-app',\n    month: 1,\n    icon: '‚ûó',\n    roadmapId: 'python-mastery',\n    codeSnippets: [\n      {\n        title: 'Basic Calculator Function',\n        language: 'python',\n        code: `def calculate(num1, num2, operation):\n    if operation == '+':\n        return num1 + num2\n    elif operation == '-':\n        return num1 - num2\n    elif operation == '*':\n        return num1 * num2\n    elif operation == '/':\n        if num2 == 0:\n            return \"Error: Division by zero\"\n        return num1 / num2\n    else:\n        return \"Error: Invalid operation\"`\n      },\n      {\n        title: 'Main CLI Interface',\n        language: 'python',\n        code: `def main():\n    print(\"Welcome to Calculator App\")\n    while True:\n        try:\n            num1 = float(input(\"Enter first number: \"))\n            num2 = float(input(\"Enter second number: \"))\n            op = input(\"Enter operation (+, -, *, /): \")\n            \n            result = calculate(num1, num2, op)\n            print(f\"Result: {result}\")\n            \n            again = input(\"Calculate again? (y/n): \")\n            if again.lower() != 'y':\n                break\n        except ValueError:\n            print(\"Error: Please enter valid numbers\")\n            \nif __name__ == \"__main__\":\n    main()`\n      }\n    ],\n    githubResources: [\n      {\n        title: \"Python Calculator Repository\",\n        description: \"Source code for the calculator application with additional features\",\n        url: \"https://github.com/example/python-calculator\"\n      },\n      {\n        title: \"Python CLI Best Practices\",\n        description: \"Guide for building command-line interfaces in Python\",\n        url: \"https://github.com/example/python-cli-practices\"\n      }\n    ]\n  },\n  {\n    id: 'todo-app',\n    title: 'To-Do List App',\n    description: 'CLI app to manage tasks with add/remove/view features.',\n    status: 'Completed',\n    tags: ['Python', 'CLI'],\n    githubLink: '',\n    detailsLink: '/milestones/todo-app',\n    month: 1,\n    icon: 'üìù',\n    roadmapId: 'python-mastery'\n  },\n  {\n    id: 'temperature-converter',\n    title: 'Temperature Converter',\n    description: 'OOP-based CLI app to convert Celsius, Fahrenheit, Kelvin.',\n    status: 'Completed',\n    tags: ['Python', 'OOP'],\n    githubLink: '',\n    detailsLink: '/milestones/temperature-converter',\n    month: 1,\n    icon: 'üå°Ô∏è',\n    roadmapId: 'python-mastery'\n  },\n  {\n    id: 'grade-tracker',\n    title: 'Student Grade Tracker',\n    description: 'Track student grades and save/load data to JSON files.',\n    status: 'Completed',\n    tags: ['Python', 'OOP', 'JSON'],\n    githubLink: '',\n    detailsLink: '/milestones/grade-tracker',\n    month: 1,\n    icon: 'üéì',\n    roadmapId: 'python-mastery'\n  },\n  {\n    id: 'bakery-system',\n    title: 'Bakery Management System',\n    description: 'Advanced OOP project to manage customers, products, orders, and transactions.',\n    status: 'Completed',\n    tags: ['Python', 'OOP', 'Inventory'],\n    githubLink: '',\n    detailsLink: '/milestones/bakery-system',\n    month: 1,\n    icon: 'üçû',\n    roadmapId: 'python-mastery'\n  },\n  {\n    id: 'news-scraper',\n    title: 'News Scraper',\n    description: 'Web scraper to fetch latest news headlines using BeautifulSoup.',\n    status: 'Not Started',\n    tags: ['Python', 'Web Scraping'],\n    githubLink: '',\n    detailsLink: '/milestones/news-scraper',\n    month: 1,\n    icon: 'üì∞',\n    roadmapId: 'python-mastery'\n  },\n  {\n    id: 'weather-api-app',\n    title: 'Weather API App',\n    description: 'Fetch real-time weather data using OpenWeatherMap API.',\n    status: 'Not Started',\n    tags: ['Python', 'API'],\n    githubLink: '',\n    detailsLink: '/milestones/weather-api-app',\n    month: 1,\n    icon: 'üå¶Ô∏è',\n    roadmapId: 'python-mastery'\n  },\n\n  // Month 2: ML Basics\n  {\n    id: 'titanic-ml',\n    title: 'Titanic Survival Predictor',\n    description: 'Build an ML model to predict survival on the Titanic dataset.',\n    status: 'Not Started',\n    tags: ['ML', 'Pandas', 'scikit-learn'],\n    githubLink: '',\n    detailsLink: '/milestones/titanic-ml',\n    month: 2,\n    icon: 'üö¢',\n    roadmapId: 'ml-basics'\n  },\n  {\n    id: 'spam-classifier',\n    title: 'Spam Classifier',\n    description: 'Train a logistic regression model to classify spam emails.',\n    status: 'Not Started',\n    tags: ['ML', 'Classification'],\n    githubLink: '',\n    detailsLink: '/milestones/spam-classifier',\n    month: 2,\n    icon: 'üìß',\n    roadmapId: 'ml-basics'\n  },\n\n  // Month 3: Deep Learning\n  {\n    id: 'mnist-classifier',\n    title: 'MNIST Handwritten Digit Classifier',\n    description: 'Train a neural network to classify handwritten digits.',\n    status: 'Not Started',\n    tags: ['PyTorch', 'Deep Learning'],\n    githubLink: '',\n    detailsLink: '/milestones/mnist-classifier',\n    month: 3,\n    icon: '‚úçÔ∏è',\n    roadmapId: 'deep-learning'\n  },\n  {\n    id: 'cats-dogs-cnn',\n    title: 'Cats vs Dogs Image Classifier',\n    description: 'Build a CNN to classify images of cats and dogs.',\n    status: 'Not Started',\n    tags: ['PyTorch', 'CNN'],\n    githubLink: '',\n    detailsLink: '/milestones/cats-dogs-cnn',\n    month: 3,\n    icon: 'üê∂',\n    roadmapId: 'deep-learning'\n  },\n\n  // Month 4: LLM Fine-tuning\n  {\n    id: 'gpt2-finetune',\n    title: 'Fine-Tune GPT-2',\n    description: 'Fine-tune a GPT-2 model on a custom text dataset.',\n    status: 'Not Started',\n    tags: ['Transformers', 'HuggingFace'],\n    githubLink: '',\n    detailsLink: '/milestones/gpt2-finetune',\n    month: 4,\n    icon: 'üß†',\n    roadmapId: 'llm-finetuning',\n    githubResources: [\n      {\n        title: \"Project Repository\",\n        description: \"Main GitHub repository for the LLM Learning Journey project\",\n        url: \"https://github.com/inasfarras/my-llm-milestones\"\n      },\n      {\n        title: \"Live Demo\",\n        description: \"Live deployment of the project on Vercel\",\n        url: \"https://my-llm-milestones.vercel.app\"\n      }\n    ]\n  },\n\n  // Month 4: RAG Systems\n  {\n    id: 'rag-bot',\n    title: 'RAG QA Chatbot',\n    description: 'Build a chatbot that retrieves documents using vector embeddings.',\n    status: 'Not Started',\n    tags: ['RAG', 'FAISS', 'LangChain'],\n    githubLink: '',\n    detailsLink: '/milestones/rag-bot',\n    month: 4,\n    icon: 'üìÑ',\n    roadmapId: 'rag-systems'\n  },\n\n  // Month 5: AI Agents\n  {\n    id: 'multi-agent-system',\n    title: 'Multi-Agent Reasoning System',\n    description: 'Create AI agents that reason, retrieve, and solve tasks collaboratively.',\n    status: 'Not Started',\n    tags: ['LangChain', 'Multi-Agent'],\n    githubLink: '',\n    detailsLink: '/milestones/multi-agent-system',\n    month: 5,\n    icon: 'ü§ñ',\n    roadmapId: 'ai-agents'\n  }\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 312, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/inas%20farras/OneDrive%20-%20%E5%9C%8B%E7%AB%8B%E6%9D%B1%E8%8F%AF%E5%A4%A7%E5%AD%B8/%E6%A1%8C%E9%9D%A2/Project/milestone/src/context/MilestoneContext.tsx"],"sourcesContent":["'use client';\n\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\nimport { Milestone, milestones as initialMilestones } from '@/data/projects';\n\ninterface MilestoneContextType {\n  milestones: Milestone[];\n  updateMilestoneStatus: (milestoneId: string, newStatus: 'Completed' | 'In Progress' | 'Not Started') => void;\n  addCodeSnippet: (milestoneId: string, snippet: { title: string; language: string; code: string }) => void;\n  editCodeSnippet: (milestoneId: string, snippetIndex: number, updatedSnippet: { title: string; language: string; code: string }) => void;\n  deleteCodeSnippet: (milestoneId: string, snippetIndex: number) => void;\n  addGithubResource: (milestoneId: string, resource: { title: string; description: string; url: string }) => void;\n  stats: {\n    completed: number;\n    inProgress: number;\n    notStarted: number;\n    total: number;\n    completedPercentage: number;\n  };\n}\n\nconst MilestoneContext = createContext<MilestoneContextType | undefined>(undefined);\n\ninterface MilestoneProviderProps {\n  children: ReactNode;\n}\n\nexport const MilestoneProvider = ({ children }: MilestoneProviderProps) => {\n  const [milestones, setMilestones] = useState<Milestone[]>(initialMilestones);\n  const [stats, setStats] = useState({\n    completed: 0,\n    inProgress: 0,\n    notStarted: 0,\n    total: initialMilestones.length,\n    completedPercentage: 0,\n  });\n  \n  // Calculate stats whenever milestones change\n  useEffect(() => {\n    const completed = milestones.filter(p => p.status === 'Completed').length;\n    const inProgress = milestones.filter(p => p.status === 'In Progress').length;\n    const notStarted = milestones.filter(p => p.status === 'Not Started').length;\n    \n    setStats({\n      completed,\n      inProgress,\n      notStarted,\n      total: milestones.length,\n      completedPercentage: Math.round((completed / milestones.length) * 100)\n    });\n  }, [milestones]);\n  \n  const updateMilestoneStatus = (milestoneId: string, newStatus: 'Completed' | 'In Progress' | 'Not Started') => {\n    setMilestones(prevMilestones => \n      prevMilestones.map(milestone => \n        milestone.id === milestoneId \n          ? { ...milestone, status: newStatus } \n          : milestone\n      )\n    );\n    \n    // Store updated milestones in localStorage with current state\n    try {\n      const updatedMilestones = milestones.map(m => m.id === milestoneId ? { ...m, status: newStatus } : m);\n      localStorage.setItem('milestoneStatuses', JSON.stringify(\n        updatedMilestones.map(m => ({ id: m.id, status: m.status }))\n      ));\n    } catch (error) {\n      console.error('Error saving to localStorage:', error);\n    }\n  };\n  \n  // Add a new code snippet to a milestone\n  const addCodeSnippet = (milestoneId: string, snippet: { title: string; language: string; code: string }) => {\n    setMilestones(prevMilestones => {\n      // Create the updated milestones array\n      const updatedMilestones = prevMilestones.map(milestone => {\n        if (milestone.id === milestoneId) {\n          const codeSnippets = milestone.codeSnippets ? [...milestone.codeSnippets, snippet] : [snippet];\n          return { ...milestone, codeSnippets };\n        }\n        return milestone;\n      });\n      \n      // Update localStorage with the new milestones state\n      try {\n        localStorage.setItem('milestoneCodeSnippets', JSON.stringify(\n          updatedMilestones\n            .filter(m => m.codeSnippets && m.codeSnippets.length > 0)\n            .map(m => ({ id: m.id, codeSnippets: m.codeSnippets }))\n        ));\n      } catch (error) {\n        console.error('Error saving code snippets to localStorage:', error);\n      }\n      \n      // Return the updated state\n      return updatedMilestones;\n    });\n  };\n  \n  // Edit an existing code snippet\n  const editCodeSnippet = (milestoneId: string, snippetIndex: number, updatedSnippet: { title: string; language: string; code: string }) => {\n    setMilestones(prevMilestones => {\n      // Create the updated milestones array\n      const updatedMilestones = prevMilestones.map(milestone => {\n        if (milestone.id === milestoneId && milestone.codeSnippets) {\n          const newSnippets = [...milestone.codeSnippets];\n          newSnippets[snippetIndex] = updatedSnippet;\n          return { ...milestone, codeSnippets: newSnippets };\n        }\n        return milestone;\n      });\n      \n      // Update localStorage with the new milestones state\n      try {\n        localStorage.setItem('milestoneCodeSnippets', JSON.stringify(\n          updatedMilestones\n            .filter(m => m.codeSnippets && m.codeSnippets.length > 0)\n            .map(m => ({ id: m.id, codeSnippets: m.codeSnippets }))\n        ));\n      } catch (error) {\n        console.error('Error saving edited code snippet to localStorage:', error);\n      }\n      \n      // Return the updated state\n      return updatedMilestones;\n    });\n  };\n  \n  // Delete a code snippet\n  const deleteCodeSnippet = (milestoneId: string, snippetIndex: number) => {\n    setMilestones(prevMilestones => {\n      // Create the updated milestones array\n      const updatedMilestones = prevMilestones.map(milestone => {\n        if (milestone.id === milestoneId && milestone.codeSnippets) {\n          const newSnippets = milestone.codeSnippets.filter((_, i) => i !== snippetIndex);\n          return { ...milestone, codeSnippets: newSnippets.length > 0 ? newSnippets : undefined };\n        }\n        return milestone;\n      });\n      \n      // Update localStorage with the new milestones state\n      try {\n        localStorage.setItem('milestoneCodeSnippets', JSON.stringify(\n          updatedMilestones\n            .filter(m => m.codeSnippets && m.codeSnippets.length > 0)\n            .map(m => ({ id: m.id, codeSnippets: m.codeSnippets }))\n        ));\n      } catch (error) {\n        console.error('Error saving code snippets after deletion to localStorage:', error);\n      }\n      \n      // Return the updated state\n      return updatedMilestones;\n    });\n  };\n  \n  // Add a new GitHub resource to a milestone\n  const addGithubResource = (milestoneId: string, resource: { title: string; description: string; url: string }) => {\n    setMilestones(prevMilestones => {\n      // Create the updated milestones array\n      const updatedMilestones = prevMilestones.map(milestone => {\n        if (milestone.id === milestoneId) {\n          const githubResources = milestone.githubResources ? [...milestone.githubResources, resource] : [resource];\n          return { ...milestone, githubResources };\n        }\n        return milestone;\n      });\n      \n      // Update localStorage with the new milestones state\n      try {\n        localStorage.setItem('milestoneGithubResources', JSON.stringify(\n          updatedMilestones\n            .filter(m => m.githubResources && m.githubResources.length > 0)\n            .map(m => ({ id: m.id, githubResources: m.githubResources }))\n        ));\n      } catch (error) {\n        console.error('Error saving GitHub resources to localStorage:', error);\n      }\n      \n      // Return the updated state\n      return updatedMilestones;\n    });\n  };\n  \n  // Load saved statuses from localStorage on initial load\n  useEffect(() => {\n    try {\n      // Load status information\n      const savedStatuses = localStorage.getItem('milestoneStatuses') || localStorage.getItem('projectStatuses');\n      const savedCodeSnippets = localStorage.getItem('milestoneCodeSnippets');\n      const savedGithubResources = localStorage.getItem('milestoneGithubResources');\n      \n      let updatedMilestones = [...initialMilestones];\n      \n      // Apply saved statuses\n      if (savedStatuses) {\n        const parsedStatuses = JSON.parse(savedStatuses) as { id: string; status: 'Completed' | 'In Progress' | 'Not Started' }[];\n        updatedMilestones = updatedMilestones.map(milestone => {\n          const savedStatus = parsedStatuses.find(s => s.id === milestone.id);\n          return savedStatus ? { ...milestone, status: savedStatus.status } : milestone;\n        });\n      }\n      \n      // Apply saved code snippets\n      if (savedCodeSnippets) {\n        const parsedCodeSnippets = JSON.parse(savedCodeSnippets) as { id: string; codeSnippets: Array<{ title: string; language: string; code: string }> }[];\n        updatedMilestones = updatedMilestones.map(milestone => {\n          const saved = parsedCodeSnippets.find(s => s.id === milestone.id);\n          return saved ? { ...milestone, codeSnippets: saved.codeSnippets } : milestone;\n        });\n      }\n      \n      // Apply saved GitHub resources\n      if (savedGithubResources) {\n        const parsedGithubResources = JSON.parse(savedGithubResources) as { id: string; githubResources: Array<{ title: string; description: string; url: string }> }[];\n        updatedMilestones = updatedMilestones.map(milestone => {\n          const saved = parsedGithubResources.find(s => s.id === milestone.id);\n          return saved ? { ...milestone, githubResources: saved.githubResources } : milestone;\n        });\n      }\n      \n      setMilestones(updatedMilestones);\n    } catch (error) {\n      console.error('Error loading from localStorage:', error);\n    }\n  }, []);\n  \n  return (\n    <MilestoneContext.Provider value={{ \n      milestones, \n      updateMilestoneStatus, \n      addCodeSnippet, \n      editCodeSnippet,\n      deleteCodeSnippet,\n      addGithubResource, \n      stats \n    }}>\n      {children}\n    </MilestoneContext.Provider>\n  );\n};\n\n// For backwards compatibility\nexport const ProjectProvider = MilestoneProvider;\n\nexport const useMilestones = () => {\n  const context = useContext(MilestoneContext);\n  if (context === undefined) {\n    throw new Error('useMilestones must be used within a MilestoneProvider');\n  }\n  return context;\n};\n\n// For backwards compatibility\nexport const useProjects = useMilestones; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 570, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/inas%20farras/OneDrive%20-%20%E5%9C%8B%E7%AB%8B%E6%9D%B1%E8%8F%AF%E5%A4%A7%E5%AD%B8/%E6%A1%8C%E9%9D%A2/Project/milestone/src/data/thesis.ts"],"sourcesContent":["export interface ThesisMilestone {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  date: string;\r\n  status: 'Completed' | 'In Progress' | 'Not Started';\r\n}\r\n\r\nexport interface ThesisInfo {\r\n  title: string;\r\n  description: string;\r\n  supervisor: string;\r\n  department: string;\r\n  pdfLink?: string;\r\n  milestones: ThesisMilestone[];\r\n}\r\n\r\nexport const thesisData: ThesisInfo = {\r\n  title: \"Designing a Reasoning-Augmented Retrieval System for Smarter Knowledge Retrieval in LLMs\",\r\n  description: \"This thesis explores the development of a Reasoning-Augmented Retrieval (ReAR) system that enhances traditional retrieval-augmented generation (RAG) methods by incorporating planning and reasoning processes prior to document retrieval. The proposed framework aims to improve the accuracy, relevance, and reasoning ability of large language models when answering complex and knowledge-intensive queries.\",\r\n  supervisor: \"ÈªÉÊåØÊ¶Æ Chenn-Jung Huang\",\r\n  department: \"Department of Computer Science and Information Engineering\",\r\n  pdfLink: \"#\", // Replace with actual link when available\r\n  milestones: [\r\n    {\r\n      id: \"proposal\",\r\n      title: \"Research Proposal\",\r\n      description: \"Define the research problem, motivations, and introduce Reasoning-Augmented Retrieval as the proposed solution.\",\r\n      date: \"May 2025\",\r\n      status: \"Completed\"\r\n    },\r\n    {\r\n      id: \"literature\",\r\n      title: \"Literature Review\",\r\n      description: \"Analyze traditional RAG systems, reasoning techniques in LLMs, and emerging agent-based retrieval methods.\",\r\n      date: \"June 2025\",\r\n      status: \"In Progress\"\r\n    },\r\n    {\r\n      id: \"design\",\r\n      title: \"System Design\",\r\n      description: \"Design the architecture for the Reasoning-Augmented Retrieval system, including agent modules and reasoning workflows.\",\r\n      date: \"July 2025\",\r\n      status: \"Not Started\"\r\n    },\r\n    {\r\n      id: \"implementation\",\r\n      title: \"System Implementation\",\r\n      description: \"Implement the Reasoning-Augmented Retrieval framework and develop baseline models for comparison.\",\r\n      date: \"August 2025\",\r\n      status: \"Not Started\"\r\n    },\r\n    {\r\n      id: \"experiments\",\r\n      title: \"Experiments & Evaluation\",\r\n      description: \"Conduct experiments comparing standard RAG with the proposed ReAR system across complex multi-domain queries.\",\r\n      date: \"September 2025\",\r\n      status: \"Not Started\"\r\n    },\r\n    {\r\n      id: \"writing\",\r\n      title: \"Thesis Writing\",\r\n      description: \"Document the methodology, experimental results, and implications of Reasoning-Augmented Retrieval systems.\",\r\n      date: \"October 2025\",\r\n      status: \"Not Started\"\r\n    }\r\n  ]\r\n};\r\n"],"names":[],"mappings":";;;AAiBO,MAAM,aAAyB;IACpC,OAAO;IACP,aAAa;IACb,YAAY;IACZ,YAAY;IACZ,SAAS;IACT,YAAY;QACV;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,MAAM;YACN,QAAQ;QACV;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,MAAM;YACN,QAAQ;QACV;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,MAAM;YACN,QAAQ;QACV;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,MAAM;YACN,QAAQ;QACV;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,MAAM;YACN,QAAQ;QACV;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,MAAM;YACN,QAAQ;QACV;KACD;AACH","debugId":null}},
    {"offset": {"line": 630, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/inas%20farras/OneDrive%20-%20%E5%9C%8B%E7%AB%8B%E6%9D%B1%E8%8F%AF%E5%A4%A7%E5%AD%B8/%E6%A1%8C%E9%9D%A2/Project/milestone/src/context/ThesisContext.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { createContext, useContext, useState, useEffect, ReactNode } from 'react';\r\nimport { ThesisMilestone, thesisData as initialThesisData } from '@/data/thesis';\r\n\r\ninterface ThesisContextType {\r\n  thesisData: {\r\n    title: string;\r\n    description: string;\r\n    supervisor: string;\r\n    department: string;\r\n    pdfLink?: string;\r\n    milestones: ThesisMilestone[];\r\n  };\r\n  updateMilestoneStatus: (milestoneId: string, newStatus: 'Completed' | 'In Progress' | 'Not Started') => void;\r\n  stats: {\r\n    completed: number;\r\n    inProgress: number;\r\n    notStarted: number;\r\n    total: number;\r\n    completedPercentage: number;\r\n  };\r\n}\r\n\r\nconst ThesisContext = createContext<ThesisContextType | undefined>(undefined);\r\n\r\ninterface ThesisProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const ThesisProvider = ({ children }: ThesisProviderProps) => {\r\n  const [thesisData, setThesisData] = useState(initialThesisData);\r\n  const [stats, setStats] = useState({\r\n    completed: 0,\r\n    inProgress: 0,\r\n    notStarted: 0,\r\n    total: initialThesisData.milestones.length,\r\n    completedPercentage: 0,\r\n  });\r\n  \r\n  // Calculate stats whenever thesis milestones change\r\n  useEffect(() => {\r\n    const completed = thesisData.milestones.filter(m => m.status === 'Completed').length;\r\n    const inProgress = thesisData.milestones.filter(m => m.status === 'In Progress').length;\r\n    const notStarted = thesisData.milestones.filter(m => m.status === 'Not Started').length;\r\n    \r\n    setStats({\r\n      completed,\r\n      inProgress,\r\n      notStarted,\r\n      total: thesisData.milestones.length,\r\n      completedPercentage: Math.round((completed / thesisData.milestones.length) * 100)\r\n    });\r\n  }, [thesisData]);\r\n  \r\n  const updateMilestoneStatus = (milestoneId: string, newStatus: 'Completed' | 'In Progress' | 'Not Started') => {\r\n    setThesisData(prev => ({\r\n      ...prev,\r\n      milestones: prev.milestones.map(milestone => \r\n        milestone.id === milestoneId \r\n          ? { ...milestone, status: newStatus } \r\n          : milestone\r\n      )\r\n    }));\r\n    \r\n    // Store updated thesis data in localStorage\r\n    try {\r\n      const updatedMilestones = thesisData.milestones.map(m => \r\n        m.id === milestoneId ? { ...m, status: newStatus } : m\r\n      );\r\n      \r\n      localStorage.setItem('thesisMilestones', JSON.stringify(\r\n        updatedMilestones.map(m => ({ id: m.id, status: m.status }))\r\n      ));\r\n    } catch (error) {\r\n      console.error('Error saving thesis data to localStorage:', error);\r\n    }\r\n  };\r\n  \r\n  // Load saved thesis milestone statuses from localStorage on initial load\r\n  useEffect(() => {\r\n    try {\r\n      const savedMilestones = localStorage.getItem('thesisMilestones');\r\n      \r\n      if (savedMilestones) {\r\n        const parsedMilestones = JSON.parse(savedMilestones) as { id: string; status: 'Completed' | 'In Progress' | 'Not Started' }[];\r\n        \r\n        // Apply saved statuses to thesis milestones\r\n        setThesisData(prev => ({\r\n          ...prev,\r\n          milestones: prev.milestones.map(milestone => {\r\n            const savedMilestone = parsedMilestones.find(m => m.id === milestone.id);\r\n            return savedMilestone ? { ...milestone, status: savedMilestone.status } : milestone;\r\n          })\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading thesis data from localStorage:', error);\r\n    }\r\n  }, []);\r\n  \r\n  return (\r\n    <ThesisContext.Provider value={{ thesisData, updateMilestoneStatus, stats }}>\r\n      {children}\r\n    </ThesisContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useThesis = () => {\r\n  const context = useContext(ThesisContext);\r\n  if (context === undefined) {\r\n    throw new Error('useThesis must be used within a ThesisProvider');\r\n  }\r\n  return context;\r\n}; "],"names":[],"mappings":";;;;;AAEA;AACA;AAHA;;;;AAwBA,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAiC;AAM5D,MAAM,iBAAiB,CAAC,EAAE,QAAQ,EAAuB;IAC9D,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE,qHAAA,CAAA,aAAiB;IAC9D,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;QACjC,WAAW;QACX,YAAY;QACZ,YAAY;QACZ,OAAO,qHAAA,CAAA,aAAiB,CAAC,UAAU,CAAC,MAAM;QAC1C,qBAAqB;IACvB;IAEA,oDAAoD;IACpD,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY,WAAW,UAAU,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,aAAa,MAAM;QACpF,MAAM,aAAa,WAAW,UAAU,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,eAAe,MAAM;QACvF,MAAM,aAAa,WAAW,UAAU,CAAC,MAAM,CAAC,CAAA,IAAK,EAAE,MAAM,KAAK,eAAe,MAAM;QAEvF,SAAS;YACP;YACA;YACA;YACA,OAAO,WAAW,UAAU,CAAC,MAAM;YACnC,qBAAqB,KAAK,KAAK,CAAC,AAAC,YAAY,WAAW,UAAU,CAAC,MAAM,GAAI;QAC/E;IACF,GAAG;QAAC;KAAW;IAEf,MAAM,wBAAwB,CAAC,aAAqB;QAClD,cAAc,CAAA,OAAQ,CAAC;gBACrB,GAAG,IAAI;gBACP,YAAY,KAAK,UAAU,CAAC,GAAG,CAAC,CAAA,YAC9B,UAAU,EAAE,KAAK,cACb;wBAAE,GAAG,SAAS;wBAAE,QAAQ;oBAAU,IAClC;YAER,CAAC;QAED,4CAA4C;QAC5C,IAAI;YACF,MAAM,oBAAoB,WAAW,UAAU,CAAC,GAAG,CAAC,CAAA,IAClD,EAAE,EAAE,KAAK,cAAc;oBAAE,GAAG,CAAC;oBAAE,QAAQ;gBAAU,IAAI;YAGvD,aAAa,OAAO,CAAC,oBAAoB,KAAK,SAAS,CACrD,kBAAkB,GAAG,CAAC,CAAA,IAAK,CAAC;oBAAE,IAAI,EAAE,EAAE;oBAAE,QAAQ,EAAE,MAAM;gBAAC,CAAC;QAE9D,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6CAA6C;QAC7D;IACF;IAEA,yEAAyE;IACzE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI;YACF,MAAM,kBAAkB,aAAa,OAAO,CAAC;YAE7C,IAAI,iBAAiB;gBACnB,MAAM,mBAAmB,KAAK,KAAK,CAAC;gBAEpC,4CAA4C;gBAC5C,cAAc,CAAA,OAAQ,CAAC;wBACrB,GAAG,IAAI;wBACP,YAAY,KAAK,UAAU,CAAC,GAAG,CAAC,CAAA;4BAC9B,MAAM,iBAAiB,iBAAiB,IAAI,CAAC,CAAA,IAAK,EAAE,EAAE,KAAK,UAAU,EAAE;4BACvE,OAAO,iBAAiB;gCAAE,GAAG,SAAS;gCAAE,QAAQ,eAAe,MAAM;4BAAC,IAAI;wBAC5E;oBACF,CAAC;YACH;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,gDAAgD;QAChE;IACF,GAAG,EAAE;IAEL,qBACE,8OAAC,cAAc,QAAQ;QAAC,OAAO;YAAE;YAAY;YAAuB;QAAM;kBACvE;;;;;;AAGP;AAEO,MAAM,YAAY;IACvB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 735, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/inas%20farras/OneDrive%20-%20%E5%9C%8B%E7%AB%8B%E6%9D%B1%E8%8F%AF%E5%A4%A7%E5%AD%B8/%E6%A1%8C%E9%9D%A2/Project/milestone/node_modules/next/src/server/route-modules/app-page/module.compiled.js"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n    } else if (process.env.TURBOPACK) {\n      module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n    } else {\n      module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n    }\n  }\n}\n"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK"],"mappings":";AAAA,IAAIA,QAAQC,GAAG,CAACC,YAAY,KAAK,MAAQ;;AAEzC,OAAO;IACL,IAAIF,QAAQC,GAAG,CAACK,uBAA2B,EAAF;;IAQzC,OAAO;QACL,IAAIN,QAAQC,GAAG,CAACM,QAAQ,KAAK,WAAe;YAC1CJ,OAAOC,OAAO,GAAGC,QAAQ;QAC3B,OAAO,IAAIL,QAAQC,GAAG,CAACO,SAAS,EAAE;;QAIlC;IACF;AACF","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 754, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/inas%20farras/OneDrive%20-%20%E5%9C%8B%E7%AB%8B%E6%9D%B1%E8%8F%AF%E5%A4%A7%E5%AD%B8/%E6%A1%8C%E9%9D%A2/Project/milestone/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-dev-runtime.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored[\n  'react-ssr'\n].ReactJsxDevRuntime\n"],"names":["module","exports","require","vendored","ReactJsxDevRuntime"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CACxD,YACD,CAACC,kBAAkB","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/inas%20farras/OneDrive%20-%20%E5%9C%8B%E7%AB%8B%E6%9D%B1%E8%8F%AF%E5%A4%A7%E5%AD%B8/%E6%A1%8C%E9%9D%A2/Project/milestone/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts"],"sourcesContent":["module.exports = require('../../module.compiled').vendored['react-ssr'].React\n"],"names":["module","exports","require","vendored","React"],"mappings":";AAAAA,OAAOC,OAAO,GAAGC,QAAQ,4HAAyBC,QAAQ,CAAC,YAAY,CAACC,KAAK","ignoreList":[0],"debugId":null}}]
}